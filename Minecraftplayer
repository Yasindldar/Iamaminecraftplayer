
             sortbox = Instance.new("Part", Workspace)
 
             sortbox.Size = Vector3.new(((MainItem[ItemNameVal].Size.x + 0.1)*XXSort),MainItem[ItemNameVal].Size.y*YYSort,((MainItem[ItemNameVal].Size.z+ 0.1)*ZZSort)) sortbox.Color = Color3.fromRGB(TheR, TheG, TheB) sortbox.Transparency = 0.3 sortbox.CanCollide = false sortbox.Anchored = true sortbox.Material = "ForceField"
 
             Mouse.TargetFilter = sortbox
 
             while sortbox do
                 if sortstate ~= 3 and Mouse.Target and Mouse.Target.Parent then
                     local Mouseclick = Mouse.Hit
 
                         sortbox.Position = CFrame.new(Mouse.Hit.X+((XXSort/2)*MainItem[ItemNameVal].Size.x), Mouse.Hit.Y +((YYSort/2)*MainItem[ItemNameVal].Size.y + 0.01) , Mouse.Hit.z+((ZZSort/2)*MainItem[ItemNameVal].Size.z)) * Vector3.new(0,0.0,0) 
                         wait()
                     end
                 wait()
             end
 
 
             elseif sortstate == 2 then
 
                 sortstate = 3
 
                 sorttertime = tick()
 
                 local cf = sortbox.CFrame - Vector3.new(sortbox.Size.X/2, sortbox.Size.Y/2, sortbox.Size.Z/2)
 
                 if partsorting.Name == ItemNameVal then
                     if partsorting.Parent.Parent.Name == "PlayerModels" then
                         if partsorting.Parent:FindFirstChild("Owner") and tostring(partsorting.Parent.Owner.Value) == sortPlayer then
 
 
                         for i,v in pairs(game:GetService("Workspace").PlayerModels:GetDescendants()) do
                             if v.Name == ItemNameVal then
                                 if v.Parent.Name == partsorting.Parent.Name then
                                     if v.Parent:FindFirstChild("Owner") and tostring(v.Parent.Owner.Value) == sortPlayer then
                                         if v.Color == partsorting.Color then
 
                                         table.insert(tests, v)
 
                                         if XXXSort * YYYSort * ZZZSort == #tests then break end
                                         end
                                     end
                                 end
                             end
                         end
 
                         if not FastTP then if not NRTP then camon() end end
                             
 
                         for i,v in next, tests do
 
                             local cf2 = cf + Vector3.new((v.Size.X/2) + 0.1, v.Size.Y - 1, (v.Size.Z/2) + 0.1)
 
                             if not v.Parent.PrimaryPart then
                                 v.Parent.PrimaryPart = v.Parent:FindFirstChild(ItemNameVal)
                             end
 
                             if getgenv().sortsortcancel then break end
 
                             if not FastTP then 
                                 if not NRTP then
                                 game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(v.Position + Vector3.new(0, 0, v.Size.Z + 3),v.Position + Vector3.new(1, 0, 0))
                                 wait(TimesSort)
                                 end
                             end
 
                             
                             if FastTP then   
                             
                             if not v.Parent.ItemName.Value then return end
 
                             game:GetService("ReplicatedStorage").PlaceStructure.ClientPlacedStructure:FireServer(v.Parent.ItemName.Value, cf2, v.Parent.Owner.Value, nil, v.Parent, true)
                             
                             else
 
                             if not NRTP then
                                 while not isnetworkowner(v) and not getgenv().sortsortcancel do  
                                     game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v.Parent)
                                     task.wait()
                                 end
 
                                 game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(v.Parent)
                             end
 
                                 v:PivotTo(cf2)
 
                             end
 
                             if FastTP then wait(1) else if not NRTP then wait(TimesSort) end end
 
                             RRSort = RRSort + 1
 
                             cf = cf + Vector3.new(v.Size.X + 0, 0, 0)
                             if math.floor(RRSort/XXSort) == RRSort/XXSort then
                             cf = cf - Vector3.new((v.Size.X + 0) * XXSort, 0, -v.Size.Z - 0)
                             end
 
                             if math.floor(RRSort/(ZZSort * XXSort)) == RRSort/(ZZSort * XXSort) then
                             cf = cf - Vector3.new(0, -v.Size.Y - 0, (v.Size.Z + 0) * ZZSort)
                         end
                     end
 
 
 
                 end
             end
         end
     end
     fixnames()
     FastTP = nil MainItem = nil sortstate = 0 SortDown:Disconnect() tests = {} sortbox:Destroy() camoff()
     notifications:message{Title = "",Description = "Done in ".. string.format('%.1fs', tick() - sorttertime),Icon = 6023426926}
     end)
 end
  
  Sortertab1:Button("start", function()
  notifications:message{Title = "",Description = "Click a Item",Icon = 6023426926}
  sort()
  end)
  
  
  
  
  --#endregion

  
  --#region DUPE tab
  
   --#region Mimir Dupe
  Dupetab01:Toggle('Mimir Maxland', '', false, function(Value)
      Mimir = Value
  end)
 
  Dupetab01:Slider('SlotNumber', '', 1, 1, 6,false, function(Value)
     SlotNumberML = Value
  end)
 
  SlotNumberML = 1
 
  Dupetab01:Button('Dupe', function()
     DataSize = DoesSaveExist(SlotNumberML)
     print("Data Size:", DataSize)
     Dupenumber = 35 * DataSize / 2
     print("Leave on:", math.round(Dupenumber))
     MaxDupe(math.round(Dupenumber), Mimir, SlotNumberML)
  end)
     
  
  --#region old BaseSize
  Dupetab02:Button('Tutorial', function()
     TutorialVid = ""
     if not setclipboard(TutorialVid) then
         toclipboard(TutorialVid)
         else
         setclipboard(TutorialVid)
     end
     notifications:message{
         Title = "",
         Description = "youtube tutorial coming soon.",
         Icon = 6023426926
     }
 end)
 
  Dupetab02:Toggle('Mimir Maxland', '', false, function(Value)
      Mimir = Value
  end)
 
  Dupetab02:Dropdown('Base Size', "Select...", {"Small Base", "Medium Base", "Large Base"}, function(Value)
      BaseS = tostring(Value)
  end)
 
  Dupetab02:Slider('SlotNumber', '', 1, 1, 6,false, function(Value)
     SlotNumberMLO = Value
  end)
  
  Dupetab02:Button('Dupe', function()
      if BaseS == "Small Base" then
          LIT = 50
      elseif BaseS == "Medium Base" then
          LIT = 100
      elseif BaseS == "Large Base" then
          LIT = 200
      else
          notifications:message{
              Title = "Mimir",
              Description = "Pick a base size",
              Icon = 6023426926
          }
          return
      end
      MaxDupe(LIT, Mimir, SlotNumberMLO)
  end)
 --#endregion
 
 
  --#endregion
  
  
   --#region Time Dupe
  Dupetab0:Button('GET DUPE TIME', function()
      notifications:message{Title = "",Description = "Load in a base.",Icon = 6023426926}
      getdupetime()
  end)
  
  Dupetab0:Toggle('I HAVE WATCHED THE YOUTUBE VID.', '', false, function(Value)
  YOUTUBEC = Value
  end)
  
  Dupetab0:Slider('Slot Number', '', 1, 1, 6 ,false, function(Value)
      slotnumber = Value
  end)
 
  slotnumber = 1
    
  Dupetab0:Slider('Time', '', 1, 1, 50 ,true, function(Value)
      dupewaittime = Value
  end)
  
  Dupetab0:Button('DUPE(THIS WILL START THE DUPE)', function()
      if YOUTUBEC then
      notifications:message{Title = "",Description = "Dupe has started.",Icon = 6023426926}
      BaseDupe()
      else
      notifications:message{Title = "",Description = "You have to check the box.",Icon = 6023426926}
      end
  end)
  --#endregion
  
  
   --#region Axe Dupe
  Dupetab1:Slider('Slot number', '', 0, 0, 6,false, function(Value)
  axeslot = Value
  end)
  
  Dupetab1:Slider('Wait Time', '', 0, 0, 15,true, function(Value)
  axetimewhitt = Value
  end)
  
  Dupetab1:Button('Dupe Inventory', function()
  AxeDupe(axeslot,axetimewhitt)
  end)
  --#endregion
  
 
   --#region Power dupe
 
 local Label = Dupetab2:Label("Slot receiving the power will be wiped")
 
 Dupetab2:Slider('To Slot number', '', 0, 0, 6,false, function(Value)
     ToSlot = Value
 end)
 
 Dupetab2:Button('Start PowerDupe', function()
     notifications:message{
         Title = "",
         Description = "PowerDupe Started!",
         Icon = 6023426926
     }
     PowerDupe(ToSlot)
 end)
 
 local Label = Dupetab2:Label("Slot receiving the power will be wiped")
 --#endregion
 
 
   --#region Sign Dupe
  dropdownMSD = Dupetab3:Dropdown('Main', "Select...", playerList, function(Value)
  getgenv().Nameforsingdupe = Value
  end)
  
  Dupetab3:Slider('Best slot', '', 1, 1, 6,false, function(Value)
  getgenv().bestnummfordupe = Value
  end)
  
  
  Dupetab3:Toggle('Start', '', false, function(Value)
  getgenv().SoldSignAutoFarm = Value
  startnewdupe()
  end)
  
  Dupetab3:Button('Count SoldSigns', function()
  Signstuff()
  end)
  --#endregion
  
  --#endregion
  
  
  --#region Trolling tab
  
  Trollingtab1:Toggle('ClearAllShopItems', '', false, function(Value)
  ClearAllShopItems = Value
  if Value then
  ClearShopItems()
  end
  end)
  
  dropdownTB = Trollingtab1:Dropdown("Player", "Select...", playerList, function(Value)
  plrselected = Value
  end)
  
  Trollingtab1:Button('BringPlayer', function()
  BringPlayer()
  end)
  
  Trollingtab1:Button('KillPlayer', function()
  KillPlayer()
  end)
  
  --#endregion

  
  --#region Autobuy tab
  
  Autobuy1:Slider('Amount', '', 1, 1, 100,false, function(Value)
  AutoBuyAmount = Value
  end)
  
  AOpenbox = false
  
  Autobuy1:Toggle('Open box', '', false, function(Value)
  AOpenbox = Value
  end)
  
  Autobuy1:Dropdown("Select Item", "Select...", GrabShopItems(), function(Value)
  ItemToBuy = string.split(Value," - ")[1]
  return
  end)
  
  Autobuy1:Button("Phurchase Selected Item(s)", function()
  AutoBuy(ItemToBuy,AutoBuyAmount,AOpenbox)
  end)
  
  Autobuy1:Button("Abort Phurchasing", function()
  AbortAutoBuy = true
  end)
  
  
  Autobuy2:Button("Phurchase All Blueprints", function()
     for i,v in next, GetBlueprints() do
      AutoBuy(v,1,true,true)
     end
  end)
  
  Autobuy2:Button("Toll Bridge", function()
  Pay(15)
  end)
  
  Autobuy2:Button("Ferry Ticket", function()
  Pay(13)
  end)
  
  Autobuy2:Button("Power Of Ease", function()
  Pay(3)
  end)
  
  --#endregion


  --#region WOOD TAB
      
  Woodtab1:Dropdown("Select Tree", "Select...", {"Generic", "Walnut", "Cherry", "SnowGlow", "Oak", "Birch", "Koa", "Fir", "Volcano", "GreenSwampy", "CaveCrawler", "Palm", "GoldSwampy", "Frost", "Spooky", "SpookyNeon", "LoneCave",}, function(Value)
  getTree = Value
  return
  end)
  
  
  Woodtab1:Button("Bring Tree", function()
  BringTreetime = tick()
  if getTree == "LoneCave" then
     bringTree(getTree,true)
  else
     for i = 1,sdasdsad do
          wait()
          bringTree(getTree,false)
          ResizeBar(i,sdasdsad)
      end
  end
      notifications:message{Title = "",Description = "Done in ".. string.format('%.1fs', tick() - BringTreetime),Icon = 6023426926}
      if getTree == "LoneCave" then
      GetToolsfix()
      end
  end)
 
  Woodtab1:Slider('Amount', '', 1, 1, 30,false, function(Value)
  sdasdsad = Value
  end)
  sdasdsad = 1
 
  --Woodtab1:Toggle('Infinite axe range', '', false, function(Value)
     --getgenv().Infeaxerange = Value
  --end)
  
  Woodtab1:Button("Abort", function()
  if getgenv().Infeaxerange then
     infhrp(true)
  end
  getgenv().treestop = false
  wait(5)
  getgenv().treestop = true
  end)
  
  --Woodtab1:Toggle('No axe cooldown', '', false, function(Value)
      --SetSwingCooldown(Value)
  --end)
  
  
  Woodtab2:Toggle('Cut Plank to one by one', '', false, function(Value)
  notifications:message{
  Title = "",
  Description = "Click a plank cut one by one",
  Icon = 6023426926
  }
  UnitCutter = Value
  OneUnitCutter(Value)
  end)
  
  Woodtab2:Button("Bring All Logs", function()
  BringAllLogs()
  end)
  
  Woodtab2:Button("Sell All Logs", function()
  SellAllLogs()
  end)
  
  
  
  
  Woodtab3:Button("Mod Sawmill", function()
      ModSawmill()
  end)
  
  Woodtab3:Button("Mod Wood", function()
      ModWood()
  end)
  
  Woodtab4:Button('cut a tree', function()
  notifications:message{
  Title = "",
  Description = "Click a Tree to Cut",
  Icon = 6023426926
  }
  DicmemberTree()
  end)
  
  Woodtab4:Toggle('View LoneCave Tree', '', false, function(Value)
  ViewEndTree(Value)
  end)
  
  --#endregion
  
 
  --#region Settings Tab
     
     local Label = Settingtab1:Label("No Shit In Settings .")
     local Label = Settingtab1:Label("discord:  https://discord.gg/HW2qc7sJqP.")

  --#region keybinds
  CAMisEnabled = false
  
  function toggleFeature()
  CAMisEnabled = not CAMisEnabled
  if CAMisEnabled then
  camon()
  else
  camoff()
  end
  end
  
  -- Connect the function to a keybind
  game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessedEvent)
  if gameProcessedEvent then return end -- Ignore input if another part of the game is using it
  if input.KeyCode == Enum.KeyCode.C then
  toggleFeature()
  end
  end)
  --#endregion

 
  --#region UpdateDropdowns
  local function UpdateDropdown()
     playerList = GetPlrs()
     dropdownTTP:SetOptions(playerList)
     dropdownTTPB:SetOptions(playerList)
     dropdownABP:SetOptions(playerList)
     dropdownTVTP:SetOptions(playerList)
     dropdownTVTPP:SetOptions(playerList)
     dropdownIO:SetOptions(playerList)
     dropdownSP:SetOptions(playerList)
     dropdownMSD:SetOptions(playerList)
     dropdownTB:SetOptions(playerList)
     dropdownTTP:SetOptions(playerList)
     dropdownCPP:SetOptions(playerList)
 end
 
 game.Players.PlayerRemoving:Connect(UpdateDropdown)
 game.Players.PlayerAdded:Connect(UpdateDropdown)
 --#endregion

 
